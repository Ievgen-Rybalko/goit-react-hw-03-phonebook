{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/ContactList/Filter.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/Section/Section.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onFormSubmit","onNewContactAdd","reset","this","onSubmit","className","styles","title","button","type","onChange","pattern","required","small","Component","ContactItem","id","onDeleteContact","contactlist__item","button__delete","onClick","ContactList","contacts","onDeleteCont","map","Filter","message","filter","Section","children","section","container","App","handleChangeFilter","formSubmitHandler","data","console","log","addNewContact","newName","newNumber","some","alert","newContact","uuidv4","prevState","getFilteredContacts","normalizedFilter","toLowerCase","includes","deleteContactHandler","contactId","storedContacts","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a4bff13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactlist__item\":\"ContactList_contactlist__item__33Kzs\",\"title\":\"ContactList_title__2X72n\",\"button\":\"ContactList_button__RrCCV\",\"button__delete\":\"ContactList_button__delete__rMRUo\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state);\n    this.props.onNewContactAdd(this.state.name, this.state.number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label className={styles.title}>\n            Name\n            <input\n              className={styles.button}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label className={styles.title}>\n            Number\n            <input\n              className={styles.button}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n\n          <button type=\"submit\" className={styles.button + ' ' + styles.small}>\n            Сохранить\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styles from './ContactList.module.css';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\n  <li className={styles.contactlist__item}>\n    <p>\n      {name}, {number}\n    </p>\n    <button\n      type=\"button\"\n      className={styles.button__delete}\n      onClick={() => onDeleteContact(id)}\n    >\n      Удалить\n    </button>\n  </li>\n);\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteCont }) => (\n  <div>\n    <p className={styles.title}>Contact list</p>\n    <ul>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteCont}\n          />\n        );\n      })}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.any.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.css';\n\nconst Filter = ({ message, filter, onChange }) => (\n  <div>\n    <p className={styles.contactlist__item}>{message}</p>\n    <input\n      className={styles.button}\n      type=\"text\"\n      value={filter}\n      onChange={onChange}\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n    />\n  </div>\n);\n\nFilter.propTypes = {\n  message: PropTypes.string.isRequired,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={styles.section + ' ' + styles.container}>\n    {title && <h2> {title}</h2>}\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/ContactList/Filter';\nimport Section from './components/Section/Section';\n\nimport './App.css';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.any.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    number: '',\n    filter: '',\n  };\n\n  componentDidMount() {\n    const storedContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(storedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('comp upd', this.state.contacts);\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleChangeFilter = event => {\n    const { value } = event.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  formSubmitHandler = data => {\n    console.log('formSubmitHandler data:', data);\n  };\n\n  addNewContact = (newName, newNumber) => {\n    const isNew = this.state.contacts.some(({ name }) => name === newName);\n    if (isNew) {\n      alert(`${newName} is already in contacts.`);\n      return;\n    }\n\n    if (newName && newNumber) {\n      const newContact = { id: uuidv4(), name: newName, number: newNumber };\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n    // console.log('newName, newNumber', newName, newNumber);\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContactHandler = contactId => {\n    console.log('id called: ', contactId);\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  render() {\n    // console.log('uuidv4():',uuidv4());\n    // console.log('this.state.name:',this.state.name);\n    // console.log('this.state.number:',this.state.number);\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Phonebook\">\n          <ContactForm\n            onFormSubmit={this.formSubmitHandler}\n            onNewContactAdd={this.addNewContact}\n          />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter\n            message=\"Find contacts by name\"\n            filter={this.state.filter}\n            onChange={this.handleChangeFilter}\n          />\n\n          <ContactList\n            contacts={this.getFilteredContacts()}\n            onDeleteCont={this.deleteContactHandler}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1buib\",\"small\":\"ContactForm_small__11g1x\",\"title\":\"ContactForm_title__3BTEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3OQbp\",\"container\":\"Section_container__EK-oa\"};"],"sourceRoot":""}